services:
  bo-chat:
    build:
      context: .
      dockerfile: Dockerfile.production
    restart: always
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    volumes:
      - qdrant_data:/app/qdrant_storage
      - bo_chat_logs:/app/logs
    env_file:
      - .env.production
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-public"
      - "traefik.http.routers.bo-chat-http.rule=Host(`chat.lexicon.id`)"
      - "traefik.http.routers.bo-chat-http.entrypoints=web"
      - "traefik.http.services.bo-chat-http.loadbalancer.server.port=${PORT:-8080}"
      - "traefik.http.routers.bo-chat-http.middlewares=secure-headers@file,cors@file,rate-limit@file"
      - "traefik.http.routers.bo-chat.rule=Host(`chat.lexicon.id`)"
      - "traefik.http.services.bo-chat.loadbalancer.server.port=${PORT:-8080}"
      - "traefik.http.routers.bo-chat.entrypoints=websecure"
      - "traefik.http.routers.bo-chat.tls=true"
      - "traefik.http.routers.bo-chat.tls.certresolver=letsencrypt"
      - "traefik.http.routers.bo-chat.middlewares=secure-headers@file,cors@file,rate-limit@file"


volumes:
  qdrant_data:
    # Using a named volume to persist Qdrant data
  bo_chat_logs:
    # Using a named volume to persist application logs

networks:
  traefik-public:
    name: traefik-public
    external: true
