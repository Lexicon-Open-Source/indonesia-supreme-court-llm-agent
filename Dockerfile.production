FROM python:3.10-slim-bookworm
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Create a non-root user to run the application
RUN groupadd -r bouser && useradd -r -g bouser bouser && \
  mkdir -p /app/logs /app/qdrant_storage && \
  chown -R bouser:bouser /app

# Install curl for health checks and security packages
RUN apt-get update && \
  apt-get install -y --no-install-recommends curl && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

# Copy the project into the image
COPY --chown=bouser:bouser . /app

# Sync the project into a new environment, using the frozen lockfile
WORKDIR /app
RUN uv sync --frozen

# Use production environment variables
COPY --chown=bouser:bouser .env.production .env

# Set proper permissions
RUN chmod -R 755 /app/logs && \
  chmod -R 755 /app/qdrant_storage

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:${PORT:-8080}/health || exit 1

# Set env vars for Python
ENV PYTHONUNBUFFERED=1 \
  PYTHONDONTWRITEBYTECODE=1

# Switch to non-root user
USER bouser

EXPOSE ${PORT:-8080}
CMD ["uv", "run", "uvicorn", "main.http_server.app:app", "--port", "${PORT:-8080}", "--host", "0.0.0.0"]